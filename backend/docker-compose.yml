services:
  web:
    image: web
    build:
      context: .
      dockerfile: src/MailWave.Web/Dockerfile
  
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: "mailWave"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "345890"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d mailWave",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: always
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8081:80
  
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
  mongodb:
      image: mongo
      container_name: mongodb
      restart: always
      environment:
        MONGO_INITDB_ROOT_USERNAME: mongoadmin
        MONGO_INITDB_ROOT_PASSWORD: mongopassword
      ports:
        - "27017:27017"
  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=12345
      - REDIS_USER=admin
      - REDIS_USER_PASSWORD=12345
    ports:
      - "6380:6379"
    volumes:
      - ./redisdata:/data
    
volumes:
    rabbitmq_data:
    postgres-data:
    redis-data: